# https://travis-ci.org/glibin/tortik
language: python
python:
    - 2.7
    - 3.3
    - 3.4
    - 3.5
    - 3.6
    - 3.7

env:
    - DEPS=true
    - DEPS=false
before_install:
    - sudo apt-get update
    - sudo apt-get -y install libgnutls28-dev
install:
    - if [[ $TRAVIS_PYTHON_VERSION == 2* && $DEPS == true ]]; then travis_retry pip install futures mock Monotime==1.0 trollius; fi
    - if [[ $TRAVIS_PYTHON_VERSION == '2.7' ]]; then travis_retry pip install singledispatch; fi
    - if [[ $TRAVIS_PYTHON_VERSION == 'pypy' && $DEPS == true ]]; then travis_retry pip install futures mock singledispatch; fi
    # TODO(bdarnell): pycares tests are currently disabled on travis due to ipv6 issues.
    #- if [[ $TRAVIS_PYTHON_VERSION != 'pypy'* && $DEPS == true ]]; then travis_retry pip install pycares; fi
    - if [[ $TRAVIS_PYTHON_VERSION != 'pypy'* && $DEPS == true ]]; then travis_retry pip install pycurl; fi
    - if [[ $TRAVIS_PYTHON_VERSION == '2.7' && $DEPS == true ]]; then travis_retry travis_retry pip install sphinx==1.2.2 sphinx_rtd_theme; fi
    - if [[ $TRAVIS_PYTHON_VERSION == '3.5' && $DEPS == true ]]; then travis_retry travis_retry pip install sphinx==1.2.2 sphinx_rtd_theme; fi
    - if [[ $DEPS == true ]]; then travis_retry pip install lxml; fi
    - travis_retry python setup.py install
    - travis_retry pip install pep8 coverage==3.7.1 codecov coveralls pycurl pycares

script:
    - export TARGET="-m tortik_tests.runtests"
    # Travis workers are often overloaded and cause our tests to exceed
    # the default timeout of 5s.
    - export ASYNC_TEST_TIMEOUT=15
    # We use "python -m coverage" instead of the "bin/coverage" script
    # so we can pass additional arguments to python.  However, this doesn't
    # work on 2.6, so skip coverage on that version.
    # coverage needs a function that was removed in python 3.6 so we can't
    # run it with nightly cpython.
    - if [[ $TRAVIS_PYTHON_VERSION != nightly ]]; then export TARGET="-m coverage run $TARGET"; fi
    - python $TARGET
    - python -O $TARGET
    # - LANG=C python $TARGET
    - LANG=en_US.utf-8 python $TARGET
    - if [[ $TRAVIS_PYTHON_VERSION == 2* && $DEPS == true ]]; then python $TARGET --httpclient=tornado.curl_httpclient.CurlAsyncHTTPClient; fi
    - if [[ $TRAVIS_PYTHON_VERSION == 3.5 ]]; then python $TARGET --ioloop=tornado.platform.asyncio.AsyncIOLoop; fi
    - if [[ $TRAVIS_PYTHON_VERSION == 2* && $DEPS == true ]]; then python $TARGET --ioloop=tornado.platform.asyncio.AsyncIOLoop; fi
    #- if [[ $TRAVIS_PYTHON_VERSION != pypy* && $DEPS == true ]]; then python $TARGET --resolver=tornado.platform.caresresolver.CaresResolver; fi
    - if [[ $TRAVIS_PYTHON_VERSION == '3.3' ]]; then python $TARGET --ioloop_time_monotonic; fi
    - if [[ $TRAVIS_PYTHON_VERSION == '3.4' ]]; then python $TARGET --ioloop_time_monotonic; fi
    - if [[ $TRAVIS_PYTHON_VERSION == '3.5' ]]; then python $TARGET --ioloop_time_monotonic; fi
    # make coverage reports for Codecov to find
    - if [[ $TRAVIS_PYTHON_VERSION != nightly ]]; then coverage xml; fi
    # docs not ready yet
    #- if [[ $TRAVIS_PYTHON_VERSION == '3.5' && $DEPS == true ]]; then cd ../docs && mkdir sphinx-out && sphinx-build -E -n -W -b html . sphinx-out; fi
    #- if [[ $TRAVIS_PYTHON_VERSION == '2.7' && $DEPS == true ]]; then cd ../docs && mkdir sphinx-doctest-out && sphinx-build -E -n -b doctest . sphinx-out; fi
    #- if [[ $TRAVIS_PYTHON_VERSION == '3.5' && $DEPS == true ]]; then cd ../docs && mkdir sphinx-doctest-out && sphinx-build -E -n -b doctest . sphinx-out; fi

after_success:
    - coveralls
    # call codecov from project root
    - if [[ $TRAVIS_PYTHON_VERSION != nightly ]]; then cd ../ && codecov -e DEPS; fi

# This reportedly works around an issue downloading packages from pypi on
# travis.  Consider removing this after the underlying issue is fixed.
# https://github.com/travis-ci/travis-ci/issues/2389
sudo: false

matrix:
    fast_finish: true
